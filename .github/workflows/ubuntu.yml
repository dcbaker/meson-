# This is a basic workflow to help you get started with Actions

name: Ubuntu Latest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  meson:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - { id: gcc, cc: gcc, cpp: g++, setup_options: null}
          - { id: gcc-sanitize, cc: gcc, cpp: g++, setup_options: -Db_sanitize=address,undefined}
          - { id: clang, cc: clang, cpp: clang++, setup_options: null}

    env:
      CC: ccache ${{ matrix.cfg.cc }}
      CXX: ccache ${{ matrix.cfg.cpp }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: apt
        run: |
          sudo apt update
          sudo apt install libfl-dev libgtest-dev ninja-build ccache clang
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: install meson
        run: pip install meson==0.60.3 mako
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.id }}
      - name: setup git
        run : |
            git config --global user.email "mail@example.com"
            git config --global user.name "User Name"
            git config --global init.defaultBranch "main"
      - name: Meson
        run: |
            meson setup builddir ${{ matrix.cfg.setup_options }}
            ninja -C builddir
            ninja -C builddir test

  clang-tidy:
    runs-on: ubuntu-latest
    steps:
      - name: apt
        run: |
          sudo apt update
          sudo apt install libfl-dev libgtest-dev ninja-build clang-tidy
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: install meson
        run: pip install meson==0.60.3 mako
      - name: generate headers
        run: |
          meson setup builddir
          ninja -C builddir src/version.hpp src/frontend/parser.yy.hpp src/mir/argument_validators.cpp src/mir/argument_validators.hpp
      - name: clang-tidy
        run: |
          ninja -C builddir clang-tidy
